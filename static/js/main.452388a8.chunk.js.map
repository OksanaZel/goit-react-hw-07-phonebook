{"version":3,"sources":["App/App.styled.jsx","Title/Title.styled.jsx","Title/Title.jsx","ContactList/ContactList.styled.jsx","services/ContactsApi.js","redux/contacts/phoneBook-operations.js","redux/contacts/phoneBook-selectors.js","redux/contacts/phoneBook-actions.js","ContactList/ContactList.jsx","ContactForm/ContactForm.styled.jsx","ContactForm/ContactForm.jsx","Filter/Filter.jsx","App/App.jsx","redux/contacts/phoneBook-reducer.js","redux/store.js","index.js"],"names":["Container","styled","div","SectionTitle","h2","Title","title","ContactListContainer","ContactListItem","Button","fetchContacts","a","axios","get","data","addContact","contact","post","deleteContact","id","delete","defaults","baseURL","createAsyncThunk","_","rejectWithValue","contactsApi","contacts","message","getContacts","state","items","getIsLoading","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","changeFilter","createAction","ContactList","dispatch","useDispatch","useEffect","phoneBookOperations","useSelector","phoneBookSelectors","length","map","number","onClick","Form","Label","Input","ContactForm","formik","useFormik","initialValues","validationSchema","Yup","matches","notOneOf","required","onSubmit","values","setSubmitting","resetForm","handleSubmit","handleChange","isSubmitting","touched","errors","type","onChange","value","disabled","Filter","e","phoneBookActions","target","App","createReducer","fulfilled","action","payload","isLoading","pending","rejected","error","combineReducers","store","configureStore","reducer","contactReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.452388a8.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\nwidth: 900px;\r\nbackground: #FFFFFF;\r\nbox-shadow: 0px 4px 10px #2196f3;\r\nmargin: 20px auto;\r\npadding: 25px;\r\n`;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const SectionTitle = styled.h2`\r\nmargin-bottom: 25px;\r\n`;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { SectionTitle } from \"./Title.styled\";\r\n\r\nfunction Title({title}) {\r\n    return (\r\n        <SectionTitle>{title}</SectionTitle>\r\n    )\r\n}\r\n\r\nTitle.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Title;\r\n","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const ContactListContainer = styled.ul`\r\ndisplay: flex;\r\nflex-direction: column;\r\n`;\r\n\r\nexport const ContactListItem = styled.li`\r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items: center;\r\nmargin-bottom: 25px;\r\nmax-width: 550px;\r\n\r\n& svg {\r\n    width: 18px;\r\n    height: 18px;\r\n}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-width: 200px;\r\n  padding: 2px 32px;\r\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\r\n  border-radius: 4px;\r\n  border-style: none;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  line-height: 1.88;\r\n  letter-spacing: 0.06em;\r\n  color: #ffffff;\r\n  background-color: #2196f3;\r\n\r\n  & svg {\r\n    color: #fff;\r\n    height: 18px;\r\n    width: 18px;\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://611a3057cbf1b30017eb5586.mockapi.io/api/v1/';\r\n\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get(`/contacts`);\r\n  return data;\r\n}\r\n\r\nexport async function addContact(contact) {\r\nconst { data } = await axios.post(`/contacts`, contact);\r\n  return data;\r\n}\r\n\r\nexport async function deleteContact(id) {\r\n  await axios.delete(`/contacts/${id}`);\r\n  return id;\r\n}","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport * as contactsApi from \"services/ContactsApi\"\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n    \"contacts/fetchContacts\", async (_, { rejectWithValue }) => {\r\n    try {\r\n        const contacts = await contactsApi.fetchContacts();\r\n        return contacts;\r\n    } catch (error) {\r\n        return rejectWithValue(error);\r\n    }\r\n}\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n    \"contacts/addContact\", async (contact, { rejectWithValue }) => {\r\n    try {\r\n        const data = await contactsApi.addContact(contact);\r\n        return data;\r\n    } catch (error) {\r\n        return rejectWithValue(error.message);\r\n    }\r\n    \r\n});\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n    \"contacts/deleteContact\", async (id, { rejectWithValue }) => {\r\n        try {\r\n            await contactsApi.deleteContact(id);\r\n            return id;\r\n        } catch (error) {\r\n            return rejectWithValue(error.message);\r\n        }\r\n});\r\n\r\n\r\n// export const fetchContacts = () => async dispatch => {\r\n//     dispatch(phoneBookActions.fetchContactsRequest());\r\n\r\n//     try {\r\n//         const contacts = await contactsApi.fetchContacts();\r\n//         dispatch(phoneBookActions.fetchContactsSuccess(contacts));\r\n//     } catch (error) {\r\n//         dispatch(phoneBookActions.fetchContactsError(error));\r\n//     }\r\n// }","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = (state) => state.contacts.items;\r\nexport const getIsLoading = (state) => state.contacts.getIsLoading;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getVisibleContacts = createSelector([getContacts, getFilter],\r\n    (contacts, filter) => {\r\n        const normalizedFilter = filter.toLowerCase();\r\n        return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\r\n    })\r\n\r\n//     export const getVisibleContacts = (state) => {\r\n//     const contacts = getContacts(state);\r\n//     const filter = getFilter(state);\r\n//     const normalizedFilter = filter.toLowerCase();\r\n//     return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\r\n// }\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const changeFilter = createAction(\"phoneBook/changeFilter\");\r\n","import React, {useEffect} from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { GoPrimitiveDot } from \"react-icons/go\";\r\nimport { AiOutlineUserDelete } from \"react-icons/ai\"\r\nimport { ContactListContainer, ContactListItem, Button } from \"./ContactList.styled\";\r\nimport { phoneBookOperations, phoneBookSelectors} from \"redux/contacts\";\r\n\r\nexport default function ContactList() {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(phoneBookOperations.fetchContacts());\r\n    }, [dispatch]);\r\n\r\n    const contacts = useSelector(phoneBookSelectors.getVisibleContacts);\r\n\r\n    return (\r\n        <ContactListContainer>\r\n            {contacts.length > 0 && contacts.map(({id, name, number}) => (\r\n                <ContactListItem key={id}>\r\n                    <GoPrimitiveDot/>\r\n                    {name}: {number}\r\n                    <Button onClick={() => dispatch(phoneBookOperations.deleteContact(id))}>\r\n                        <AiOutlineUserDelete />\r\n                        Delete</Button>\r\n                </ContactListItem>\r\n            ))}\r\n        </ContactListContainer>\r\n    )\r\n}","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const Form = styled.form``;\r\n\r\nexport const Label = styled.label`\r\ndisplay: flex;\r\nflex-direction: column;\r\nmax-width: 400px;\r\nmargin-bottom: 25px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\nborder: 1px solid lightblue;\r\nborder-radius: 4px;\r\nfont-size: 20px;\r\n\r\n&:focus {\r\n    outline: none;\r\n    border: 1px solid #2196f3;\r\n}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-bottom: 25px;\r\n  min-width: 200px;\r\n  padding: 2px 32px;\r\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\r\n  border-radius: 4px;\r\n  border-style: none;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n  line-height: 1.88;\r\n  letter-spacing: 0.06em;\r\n  color: #ffffff;\r\n  background-color: #2196f3;\r\n  \r\n  & svg {\r\n      height: 18px;\r\n      width: 18px;\r\n      margin-right: 10px;\r\n  }\r\n`;","import React from \"react\";\r\nimport * as Yup from 'yup';\r\nimport { IoPersonAddOutline } from \"react-icons/io5\"\r\nimport { useFormik } from \"formik\";\r\nimport { Form, Label, Input, Button } from \"./ContactForm.styled\";\r\nimport { useDispatch, useSelector} from \"react-redux\";\r\nimport { phoneBookOperations, phoneBookSelectors} from \"redux/contacts\";\r\n\r\nexport default function ContactForm() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(phoneBookSelectors.getContacts)\r\n\r\n   const formik = useFormik({\r\n     initialValues: {\r\n       name: '',\r\n       number: '',\r\n     },\r\n     validationSchema: Yup.object({\r\n       name: Yup.string()\r\n         .matches(/^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\r\n           'Имя может состоять только из букв, апострофа, тире и пробелов.')\r\n         .notOneOf(contacts.map(contact => contact.name), \"Такой контакт уже существует\")\r\n         .required('Oбязательное поле'),\r\n       number: Yup.string()\r\n         .matches(/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/, 'Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +')\r\n         .required('Oбязательное поле'),\r\n     }),\r\n     onSubmit: (values, { setSubmitting, resetForm }) => {\r\n       dispatch(phoneBookOperations.addContact({ name: values.name, number: values.number })),\r\n         setSubmitting(false),\r\n         resetForm()\r\n     },\r\n   });\r\n  const { handleSubmit, handleChange, isSubmitting, values, touched, errors } = formik;\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Label>Name\r\n        <Input\r\n          name=\"name\"\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n          value={values.name}\r\n        />\r\n        {touched.name && errors.name ? (\r\n          <>{errors.name}</>\r\n        ) : null}\r\n      </Label>\r\n\r\n      <Label>Number\r\n        <Input\r\n          id=\"number\"\r\n          name=\"number\"\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n          value={values.number}\r\n        />\r\n        {touched.number && errors.number ? (\r\n          <>{errors.number}</>\r\n        ) : null}\r\n      </Label>\r\n\r\n      <Button type=\"submit\" disabled={isSubmitting}><IoPersonAddOutline /> Add contact</Button>\r\n    </Form>\r\n  );\r\n}","import React from \"react\";\r\nimport { useSelector, useDispatch} from \"react-redux\";\r\nimport { Label, Input } from \"ContactForm/ContactForm.styled\";\r\nimport { phoneBookSelectors, phoneBookActions} from \"redux/contacts\";\r\n\r\nfunction Filter() {\r\n    const value = useSelector(phoneBookSelectors.getFilter);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Label>Find contacts by name\r\n            <Input\r\n                type=\"text\"\r\n                value={value}\r\n                onChange={(e) => dispatch(phoneBookActions.changeFilter(e.target.value))} />\r\n        </Label>\r\n    )\r\n}\r\n\r\nexport default Filter; \r\n","import React from \"react\";\nimport { Container } from \"./App.styled\";\nimport Title from \"Title\";\nimport ContactList from \"ContactList\";\nimport ContactForm from \"ContactForm\";\nimport Filter from \"Filter\";\n\n\nexport default function App() {\n  return (\n    <Container>\n        <Title title={\"Phonebook\"} />\n        <ContactForm />\n        <Filter/>\n        <Title title={\"Contacts\"} />\n    <ContactList/>  \n    </Container>\n  )\n}\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as phoneBookActions from \"./phoneBook-actions\";\r\nimport { fetchContacts, addContact, deleteContact } from \"./phoneBook-operations\";\r\n\r\nconst items = createReducer([], {\r\n    [fetchContacts.fulfilled]: (_, action) => action.payload,\r\n    [addContact.fulfilled]: (state, { payload }) => [payload, ...state],\r\n    [deleteContact.fulfilled]: (state, { payload }) => state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n    [fetchContacts.pending]: () => true,\r\n    [fetchContacts.fulfilled]: () => false,\r\n    [fetchContacts.rejected]: () => false,\r\n    [addContact.pending]: () => true,\r\n    [addContact.fulfilled]: () => false,\r\n    [addContact.rejected]: () => false,\r\n    [deleteContact.pending]: () => true,\r\n    [deleteContact.fulfilled]: () => false,\r\n    [deleteContact.rejected]: () => false,\r\n\r\n})\r\n\r\nconst error = createReducer(null, {\r\n    [fetchContacts.pending]: null,\r\n    [fetchContacts.rejected]: (_, action) => action.payload,\r\n    [addContact.pending]: null,\r\n    [addContact.rejected]: (_, action) => action.payload,\r\n    [deleteContact.pending]: null,\r\n    [deleteContact.rejected]: (_,action) => action.payload,\r\n})\r\n\r\nconst filter = createReducer(\"\", {\r\n    [phoneBookActions.changeFilter]: (_, action) => action.payload,\r\n})\r\n\r\nexport default combineReducers({\r\n    items,\r\n    isLoading,\r\n    error,\r\n    filter,\r\n})\r\n\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactReducer from \"../redux/contacts/phoneBook-reducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\nexport default store;\r\n\r\n// import { combineReducers, createStore} from \"redux\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\n// import { persistStore, persistReducer, FLUSH,\r\n//   REHYDRATE,\r\n//   PAUSE,\r\n//   PERSIST,\r\n//   PURGE,\r\n//   REGISTER } from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\n\r\n// const contactsPersistConfig = {\r\n//     key: 'contacts',\r\n//     storage,\r\n//     blacklist: ['filter'],\r\n// };\r\n\r\n// const store = configureStore({\r\n//     reducer: {\r\n//     contacts: persistReducer(contactsPersistConfig, contactReducer),\r\n// },\r\n//     devTools: process.env.NODE_ENV !== 'production',\r\n//     middleware: (getDefaultMiddleware) =>\r\n//     getDefaultMiddleware({\r\n//       serializableCheck: {\r\n//         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n//       },\r\n//     }),\r\n// });\r\n\r\n// const persistor = persistStore(store);\r\n\r\n// export default {store, persistor};\r\n\r\n// const rootReducer = combineReducers({\r\n//     contacts: contactReducer,\r\n// })\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react'\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n        <App />\n        {/* </PersistGate> */}\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n"],"sourceRoot":""}